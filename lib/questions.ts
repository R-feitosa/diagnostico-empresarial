// Sistema de perguntas estruturadas da Fase 1

export interface Question {
  id: string
  text: string
  options?: { value: string; label: string }[]
  type: 'text' | 'select' | 'number' | 'email' | 'tel'
  required: boolean
  conditionalLogic?: (answers: Record<string, string>) => boolean
}

// Pergunta inicial para capturar o nome
export const INITIAL_NAME_QUESTION: Question = {
  id: 'user_name',
  text: 'Ol√°! Sou o Assistente da Connect Academy. üëã\n\nAntes de come√ßarmos, qual o seu nome?',
  type: 'text',
  required: true
}

// Segunda pergunta - escolha do est√°gio do neg√≥cio
export const INITIAL_QUESTION: Question = {
  id: 'business_stage',
  text: 'Prazer em conhec√™-lo! Para come√ßar, preciso saber: voc√™ est√° **iniciando um neg√≥cio** ou **buscando melhorar um neg√≥cio atual**?',
  options: [
    { value: 'iniciando', label: 'Iniciando um neg√≥cio' },
    { value: 'melhorando', label: 'Buscando melhorar o neg√≥cio atual' }
  ],
  type: 'select',
  required: true
}

// Perguntas finais para capturar contato
export const FINAL_CONTACT_QUESTIONS: Question[] = [
  {
    id: 'user_email',
    text: 'Perfeito! Para enviar seu relat√≥rio completo, qual o seu **email**?',
    type: 'email',
    required: true
  },
  {
    id: 'user_whatsapp',
    text: 'E qual o seu **WhatsApp** para nossa equipe comercial entrar em contato? (formato: 11999999999)',
    type: 'tel',
    required: true
  }
]

export const QUESTIONS_INICIANDO: Question[] = [
  {
    id: 'business_name',
    text: 'Qual ser√° o nome da sua empresa?',
    type: 'text',
    required: true
  },
  {
    id: 'segment',
    text: 'Qual ser√° o segmento de atua√ß√£o?',
    options: [
      { value: 'varejo', label: 'Varejo' },
      { value: 'atacado', label: 'Atacado' },
      { value: 'servicos', label: 'Servi√ßos' },
      { value: 'logistica', label: 'Log√≠stica' },
      { value: 'construcao', label: 'Constru√ß√£o Civil' },
      { value: 'saude', label: 'Servi√ßos de Sa√∫de' },
      { value: 'hotel', label: 'Hotel' },
      { value: 'restaurante', label: 'Restaurante' },
      { value: 'diversos', label: 'Servi√ßos Diversos' }
    ],
    type: 'select',
    required: true
  },
  {
    id: 'tax_regime',
    text: 'Qual regime tribut√°rio pretende adotar?',
    options: [
      { value: 'simples', label: 'Simples Nacional' },
      { value: 'presumido', label: 'Lucro Presumido' },
      { value: 'real', label: 'Lucro Real' },
      { value: 'outro', label: 'Outro' }
    ],
    type: 'select',
    required: true
  },
  {
    id: 'employees',
    text: 'Quantos empregados pretende contratar inicialmente?',
    options: [
      { value: '0-10', label: 'at√© 10' },
      { value: '11-50', label: '11‚Äì50' },
      { value: '51-100', label: '51‚Äì100' },
      { value: '100+', label: '+100' }
    ],
    type: 'select',
    required: true
  },
  {
    id: 'partners',
    text: 'Quantos s√≥cios ter√° a empresa?',
    type: 'number',
    required: true
  },
  {
    id: 'locations',
    text: 'Em quais cidades/estados pretende atuar?',
    type: 'text',
    required: true
  },
  {
    id: 'main_concern',
    text: 'Qual sua maior preocupa√ß√£o ou desafio ao iniciar o neg√≥cio?',
    type: 'text',
    required: true
  }
]

export const QUESTIONS_MELHORANDO: Question[] = [
  {
    id: 'business_name',
    text: 'Qual o nome da sua empresa?',
    type: 'text',
    required: true
  },
  {
    id: 'cnpj',
    text: 'Qual o CNPJ da empresa principal?',
    type: 'text',
    required: true
  },
  {
    id: 'segment',
    text: 'Qual o segmento de atua√ß√£o?',
    options: [
      { value: 'varejo', label: 'Varejo' },
      { value: 'atacado', label: 'Atacado' },
      { value: 'servicos', label: 'Servi√ßos' },
      { value: 'logistica', label: 'Log√≠stica' },
      { value: 'construcao', label: 'Constru√ß√£o Civil' },
      { value: 'saude', label: 'Servi√ßos de Sa√∫de' },
      { value: 'hotel', label: 'Hotel' },
      { value: 'restaurante', label: 'Restaurante' },
      { value: 'diversos', label: 'Servi√ßos Diversos' }
    ],
    type: 'select',
    required: true
  },
  {
    id: 'revenue',
    text: "Qual o faturamento anual m√©dio dos √∫ltimos 3 anos? (Em caso de n√£o haver faturamento, escreva 'N√£o')",
    type: 'text',
    required: true
  },
  {
    id: 'tax_regime',
    text: 'Qual o regime tribut√°rio atual?',
    options: [
      { value: 'simples', label: 'Simples Nacional' },
      { value: 'presumido', label: 'Lucro Presumido' },
      { value: 'real', label: 'Lucro Real' },
      { value: 'outro', label: 'Outro' }
    ],
    type: 'select',
    required: true
  },
  {
    id: 'employees',
    text: 'Quantos empregados a empresa possui?',
    options: [
      { value: '0-10', label: 'at√© 10' },
      { value: '11-50', label: '11‚Äì50' },
      { value: '51-100', label: '51‚Äì100' },
      { value: '100+', label: '+100' }
    ],
    type: 'select',
    required: true
  },
  {
    id: 'contractors',
    text: 'A empresa possui contratos com prestadores PJ/aut√¥nomos?',
    options: [
      { value: 'sim', label: 'Sim' },
      { value: 'nao', label: 'N√£o' }
    ],
    type: 'select',
    required: true
  },
  {
    id: 'partners',
    text: 'Quantos s√≥cios a empresa possui?',
    type: 'number',
    required: true
  },
  {
    id: 'cnpjs',
    text: 'Quantos CNPJs existem no grupo empresarial?',
    type: 'number',
    required: true
  },
  {
    id: 'locations',
    text: 'Em quais cidades/estados a empresa atua?',
    type: 'text',
    required: true
  },
  {
    id: 'main_pain',
    text: 'Qual a maior dor ou desafio atual da empresa?',
    type: 'text',
    required: true
  }
]

export function getQuestionsList(businessStage: string): Question[] {
  const businessQuestions =
    businessStage === 'iniciando' ? QUESTIONS_INICIANDO : QUESTIONS_MELHORANDO

  return [...businessQuestions, ...FINAL_CONTACT_QUESTIONS]
}

export function getNextQuestion(
  businessStage: string,
  currentAnswers: Record<string, string>
): Question | null {
  const questions = getQuestionsList(businessStage)

  for (const question of questions) {
    if (!currentAnswers[question.id]) {
      return question
    }
  }

  return null
}
